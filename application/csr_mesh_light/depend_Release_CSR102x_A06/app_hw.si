   1                 		.file	"app_hw.c"
   2                 		.variant xap2+
   3                 	
   4                 		.large
   5                 	
   6                 		.section	.debug_abbrev,"",@progbits
   7                 	.Ldebug_abbrev0:
   8                 		.section	.debug_info,"",@progbits
   9                 	.Ldebug_info0:
  10                 		.section	.debug_line,"",@progbits
  11                 	.Ldebug_line0:
  12 0000 00 00 00 00 		.text
  12      00 02 00 00 
  12      00 00 01 01 
  12      FB 0E 0D 00 
  12      01 01 01 01 
  13                 	.Ltext0:
  14                 		.section	.text.LightHardwareSetBlink,"ax",@progbits
  15                 		.global	LightHardwareSetBlink
  16                 		.type	LightHardwareSetBlink, @function
  17                 	LightHardwareSetBlink:
  18                 	.LFB7:
  19                 		.file 1 "app_hw.c"
   0:app_hw.c      **** /******************************************************************************
   1:app_hw.c      ****  *  Copyright 2015 - 2016 Qualcomm Technologies International, Ltd.
   2:app_hw.c      ****  *  Bluetooth Low Energy CSRmesh 2.1
   3:app_hw.c      ****  *  Application version 2.1.0
   4:app_hw.c      ****  *
   5:app_hw.c      ****  *  FILE
   6:app_hw.c      ****  *      app_hw.c
   7:app_hw.c      ****  *
   8:app_hw.c      ****  *  DESCRIPTION
   9:app_hw.c      ****  *      This file implements the CSRmesh light hardware specific functions.
  10:app_hw.c      ****  *
  11:app_hw.c      ****  *  NOTE
  12:app_hw.c      ****  *      Default hardware is always IOT board.
  13:app_hw.c      ****  *
  14:app_hw.c      ****  *****************************************************************************/
  15:app_hw.c      **** 
  16:app_hw.c      **** #include <timer.h>
  17:app_hw.c      **** 
  18:app_hw.c      **** /*============================================================================*
  19:app_hw.c      ****  *  Local Header Files
  20:app_hw.c      ****  *============================================================================*/
  21:app_hw.c      **** #include "user_config.h"
  22:app_hw.c      **** #include "iot_hw.h"
  23:app_hw.c      **** #include "nvm_access.h"
  24:app_hw.c      **** #include "app_hw.h"
  25:app_hw.c      **** #include "app_mesh_handler.h"
  26:app_hw.c      **** #include "uart_queue.h"
  27:app_hw.c      **** 
  28:app_hw.c      **** /*============================================================================*
  29:app_hw.c      ****  *  Private Definitions
  30:app_hw.c      ****  *============================================================================*/
  31:app_hw.c      **** /* Color temperature calculation parameters */
  32:app_hw.c      **** /* Temperature is stored in 500 Kelvin units */
  33:app_hw.c      **** #define CCT_TEMP_FACTOR             (500)
  34:app_hw.c      **** #define PACK_CCT_LEVEL(temp, level) (((uint16)level << 8)| \
  35:app_hw.c      ****                                      ((temp/CCT_TEMP_FACTOR) & 0xFF))
  36:app_hw.c      **** #define GET_LEVEL(val)              ((val >> 8) & 0xFF)
  37:app_hw.c      **** #define GET_TEMP(val)               (val & 0xFF)
  38:app_hw.c      **** #define LUT_SIZE(lut)               (sizeof(lut)/sizeof(lut[0]))
  39:app_hw.c      **** 
  40:app_hw.c      **** extern timer_id tId_UART_TX_ACK;
  41:app_hw.c      **** /*============================================================================*
  42:app_hw.c      ****  *  Private Data
  43:app_hw.c      ****  *============================================================================*/
  44:app_hw.c      **** #ifdef USE_ASSOCIATION_REMOVAL_KEY
  45:app_hw.c      **** /* Association Button Press Timer */
  46:app_hw.c      **** static timer_id long_keypress_tid;
  47:app_hw.c      **** #endif /* USE_ASSOCIATION_REMOVAL_KEY */
  48:app_hw.c      **** 
  49:app_hw.c      **** #ifdef COLOUR_TEMP_ENABLED
  50:app_hw.c      **** /* Look up tables for color temperature
  51:app_hw.c      ****  * (lower byte is Temperature in 500 Kelvin units)
  52:app_hw.c      ****  * and color level (higher byte).
  53:app_hw.c      ****  */
  54:app_hw.c      **** 
  55:app_hw.c      **** /* LUT for Red */
  56:app_hw.c      **** static const uint16 cct_red_lut[] =
  57:app_hw.c      **** {
  58:app_hw.c      ****     PACK_CCT_LEVEL(  6500, 255),
  59:app_hw.c      ****     PACK_CCT_LEVEL(  7000, 245),
  60:app_hw.c      ****     PACK_CCT_LEVEL(  8000, 227),
  61:app_hw.c      ****     PACK_CCT_LEVEL( 10000, 204),
  62:app_hw.c      ****     PACK_CCT_LEVEL( 12500, 188),
  63:app_hw.c      ****     PACK_CCT_LEVEL( 15000, 179),
  64:app_hw.c      ****     PACK_CCT_LEVEL( 20000, 168),
  65:app_hw.c      ****     PACK_CCT_LEVEL( 25000, 163),
  66:app_hw.c      ****     PACK_CCT_LEVEL( 30000, 159),
  67:app_hw.c      ****     PACK_CCT_LEVEL( 35000, 157),
  68:app_hw.c      ****     PACK_CCT_LEVEL( 40000, 155)
  69:app_hw.c      **** };
  70:app_hw.c      **** 
  71:app_hw.c      **** /* LUT for Green */
  72:app_hw.c      **** static const uint16 cct_green_lut[] =
  73:app_hw.c      **** {
  74:app_hw.c      ****     PACK_CCT_LEVEL(  1000,  51),
  75:app_hw.c      ****     PACK_CCT_LEVEL(  1500, 109),
  76:app_hw.c      ****     PACK_CCT_LEVEL(  2500, 161),
  77:app_hw.c      ****     PACK_CCT_LEVEL(  3000, 180),
  78:app_hw.c      ****     PACK_CCT_LEVEL(  4000, 209),
  79:app_hw.c      ****     PACK_CCT_LEVEL(  5000, 228),
  80:app_hw.c      ****     PACK_CCT_LEVEL(  6000, 243),
  81:app_hw.c      ****     PACK_CCT_LEVEL(  6500, 249),
  82:app_hw.c      ****     PACK_CCT_LEVEL(  7000, 243),
  83:app_hw.c      ****     PACK_CCT_LEVEL(  9000, 225),
  84:app_hw.c      ****     PACK_CCT_LEVEL( 12000, 211),
  85:app_hw.c      ****     PACK_CCT_LEVEL( 18000, 199),
  86:app_hw.c      ****     PACK_CCT_LEVEL( 25000, 193),
  87:app_hw.c      ****     PACK_CCT_LEVEL( 38000, 188)
  88:app_hw.c      **** };
  89:app_hw.c      **** 
  90:app_hw.c      **** /* LUT for Blue */
  91:app_hw.c      **** static const uint16 cct_blue_lut[] =
  92:app_hw.c      **** {
  93:app_hw.c      ****     PACK_CCT_LEVEL( 1500,   0),
  94:app_hw.c      ****     PACK_CCT_LEVEL( 2000,  18),
  95:app_hw.c      ****     PACK_CCT_LEVEL( 2500,  72),
  96:app_hw.c      ****     PACK_CCT_LEVEL( 3000, 107),
  97:app_hw.c      ****     PACK_CCT_LEVEL( 4000, 163),
  98:app_hw.c      ****     PACK_CCT_LEVEL( 5000, 206),
  99:app_hw.c      ****     PACK_CCT_LEVEL( 6000, 239),
 100:app_hw.c      ****     PACK_CCT_LEVEL( 6500, 253),
 101:app_hw.c      ****     PACK_CCT_LEVEL( 7000, 255)
 102:app_hw.c      **** };
 103:app_hw.c      **** 
 104:app_hw.c      **** /*============================================================================*
 105:app_hw.c      ****  *  Private Function Prototypes
 106:app_hw.c      ****  *============================================================================*/
 107:app_hw.c      **** /* Function to convert Color temperature to level from LUT */
 108:app_hw.c      **** static uint8 getLevelFromCCTLut(uint16 temp, const uint16 *color_lut,
 109:app_hw.c      ****                                              uint16 sizeof_lut);
 110:app_hw.c      **** 
 111:app_hw.c      **** /*============================================================================*
 112:app_hw.c      ****  *  Private Function Implementations
 113:app_hw.c      ****  *============================================================================*/
 114:app_hw.c      **** /*----------------------------------------------------------------------------*
 115:app_hw.c      ****  *  NAME
 116:app_hw.c      ****  *      getLevelFromCCTLut
 117:app_hw.c      ****  *
 118:app_hw.c      ****  *  DESCRIPTION
 119:app_hw.c      ****  *      This function linearly interpolates the color value from LUT and
 120:app_hw.c      ****  *      color temperature.
 121:app_hw.c      ****  *
 122:app_hw.c      ****  *  RETURNS
 123:app_hw.c      ****  *      Level of the colour from 0 - 255.
 124:app_hw.c      ****  *
 125:app_hw.c      ****  *---------------------------------------------------------------------------*/
 126:app_hw.c      **** static uint8 getLevelFromCCTLut(uint16 temp, const uint16 *color_lut,
 127:app_hw.c      ****                                              uint16 sizeof_lut)
 128:app_hw.c      **** {
 129:app_hw.c      ****     uint16 idx;
 130:app_hw.c      ****     int16  x2,y2,x1,y1;
 131:app_hw.c      ****     int32  val;
 132:app_hw.c      ****     uint16 thk = temp/CCT_TEMP_FACTOR;
 133:app_hw.c      **** 
 134:app_hw.c      ****     for (idx = 0; idx < sizeof_lut; idx++)
 135:app_hw.c      ****     {
 136:app_hw.c      ****         /* Find the temperature just greater than temperature to be set */
 137:app_hw.c      ****         if (thk < GET_TEMP(color_lut[idx]))
 138:app_hw.c      ****         {
 139:app_hw.c      ****             if (0 == idx)
 140:app_hw.c      ****             {
 141:app_hw.c      ****                 /* if the temperature is less than first LUT element
 142:app_hw.c      ****                  * then saturate at that value.
 143:app_hw.c      ****                  */
 144:app_hw.c      ****                 return GET_LEVEL(color_lut[idx]);
 145:app_hw.c      ****             }
 146:app_hw.c      ****             else
 147:app_hw.c      ****             {
 148:app_hw.c      ****                 /* Get the points on interpolation line
 149:app_hw.c      ****                  * Multiply temperature by unit factor to get value
 150:app_hw.c      ****                  * in Kelvin.
 151:app_hw.c      ****                  */
 152:app_hw.c      ****                 y1 = (int16)GET_LEVEL(color_lut[idx - 1]);
 153:app_hw.c      ****                 x1 = (int16)GET_TEMP(color_lut[idx - 1]) * CCT_TEMP_FACTOR;
 154:app_hw.c      ****                 y2 = (int16)GET_LEVEL(color_lut[idx]);
 155:app_hw.c      ****                 x2 = (int16)GET_TEMP(color_lut[idx]) * CCT_TEMP_FACTOR;
 156:app_hw.c      **** 
 157:app_hw.c      ****                 /* Apply Straight Line interpolation.
 158:app_hw.c      ****                  * y = y1 + ((y2 - y1) * (x -x1))/(x2 - x1)
 159:app_hw.c      ****                  */
 160:app_hw.c      ****                 val = ((int32)(y2 - y1))*((int16)temp - x1);
 161:app_hw.c      ****                 val = (val)/(x2 - x1) + y1;
 162:app_hw.c      **** 
 163:app_hw.c      ****                 /* return the calculated value */
 164:app_hw.c      ****                 return ((uint8)val);
 165:app_hw.c      ****             }
 166:app_hw.c      ****         }
 167:app_hw.c      ****     }
 168:app_hw.c      **** 
 169:app_hw.c      ****     /* If temperature is greater than last element in LUT,
 170:app_hw.c      ****      * saturate to the highest
 171:app_hw.c      ****      */
 172:app_hw.c      ****     return GET_LEVEL(color_lut[sizeof_lut - 1]);
 173:app_hw.c      **** 
 174:app_hw.c      **** }
 175:app_hw.c      **** 
 176:app_hw.c      **** #endif /* COLOUR_TEMP_ENABLED */
 177:app_hw.c      **** 
 178:app_hw.c      **** #ifdef USE_ASSOCIATION_REMOVAL_KEY
 179:app_hw.c      **** /*-----------------------------------------------------------------------------*
 180:app_hw.c      ****  *  NAME
 181:app_hw.c      ****  *      longKeyPressTimeoutHandler
 182:app_hw.c      ****  *
 183:app_hw.c      ****  *  DESCRIPTION
 184:app_hw.c      ****  *      This function handles the long key press timer event.
 185:app_hw.c      ****  *
 186:app_hw.c      ****  *  RETURNS/MODIFIES
 187:app_hw.c      ****  *      Nothing
 188:app_hw.c      ****  *
 189:app_hw.c      ****  *----------------------------------------------------------------------------*/
 190:app_hw.c      **** static void longKeyPressTimeoutHandler(timer_id tid)
 191:app_hw.c      **** {
 192:app_hw.c      ****     if (long_keypress_tid == tid)
 193:app_hw.c      ****     {
 194:app_hw.c      ****         RemoveAssociation();
 195:app_hw.c      ****         long_keypress_tid = TIMER_INVALID;
 196:app_hw.c      ****     }
 197:app_hw.c      **** }
 198:app_hw.c      **** #endif
 199:app_hw.c      **** 
 200:app_hw.c      **** /*============================================================================*
 201:app_hw.c      ****  *  Public function definitions
 202:app_hw.c      ****  *============================================================================*/
 203:app_hw.c      **** 
 204:app_hw.c      **** /*-----------------------------------------------------------------------------*
 205:app_hw.c      ****  *  NAME
 206:app_hw.c      ****  *      HandlePIOChangedEvent
 207:app_hw.c      ****  *
 208:app_hw.c      ****  *  DESCRIPTION
 209:app_hw.c      ****  *      This function handles the PIO Events (1024)
 210:app_hw.c      ****  *
 211:app_hw.c      ****  *  RETURNS/MODIFIES
 212:app_hw.c      ****  *      Nothing
 213:app_hw.c      ****  *
 214:app_hw.c      ****  *----------------------------------------------------------------------------*/
 215:app_hw.c      **** extern void HandlePIOChangedEvent(pio_changed_data *data)
 216:app_hw.c      **** {
 217:app_hw.c      ****     pio_changed_data *event_data;
 218:app_hw.c      ****     pio_mask_t sw1_mask;
 219:app_hw.c      ****     uint16 sw1_index;
 220:app_hw.c      **** 
 221:app_hw.c      ****     /* The PIO changed data is defined by struct pio_changed_data */
 222:app_hw.c      ****     event_data = (pio_changed_data *)data;
 223:app_hw.c      **** 
 224:app_hw.c      ****     /* Get the IOT switch mask */
 225:app_hw.c      ****     GetIOTSwitchMask(PIN_ESP_ACK, &sw1_mask, &sw1_index);
 226:app_hw.c      **** 
 227:app_hw.c      ****     /* If the PIO event comes from the ESP */
 228:app_hw.c      ****     if((event_data->pio_cause.mask[sw1_index] & sw1_mask.mask[sw1_index]))
 229:app_hw.c      ****     {
 230:app_hw.c      ****         if(tId_UART_TX_ACK != TIMER_INVALID) /* Make sure that previously data has been sent, then 
 231:app_hw.c      ****         {
 232:app_hw.c      ****             TimerDelete(tId_UART_TX_ACK);
 233:app_hw.c      ****             tId_UART_TX_ACK = TIMER_INVALID;            
 234:app_hw.c      ****             setUartTxAckFlag(SUCCESS);
 235:app_hw.c      ****         }
 236:app_hw.c      ****     }    
 237:app_hw.c      **** }
 238:app_hw.c      **** 
 239:app_hw.c      **** /*----------------------------------------------------------------------------*
 240:app_hw.c      ****  *  NAME
 241:app_hw.c      ****  *      LightHardwareInit
 242:app_hw.c      ****  *
 243:app_hw.c      ****  *  DESCRIPTION
 244:app_hw.c      ****  *      This function initializes the light hardware, like PIO, interface etc.
 245:app_hw.c      ****  *
 246:app_hw.c      ****  * PARAMETERS
 247:app_hw.c      ****  *      Nothing.
 248:app_hw.c      ****  *
 249:app_hw.c      ****  * RETURNS
 250:app_hw.c      ****  *      Nothing.
 251:app_hw.c      ****  *
 252:app_hw.c      ****  *----------------------------------------------------------------------------*/
 253:app_hw.c      **** extern void LightHardwareInit(void)
 254:app_hw.c      **** {
 255:app_hw.c      ****     /* The buttons on the board can be used to remove device association */
 256:app_hw.c      ****     IOTSwitchInit();
 257:app_hw.c      **** }
 258:app_hw.c      **** 
 259:app_hw.c      **** /*----------------------------------------------------------------------------*
 260:app_hw.c      ****  *  NAME
 261:app_hw.c      ****  *      LightHardwarePowerControl
 262:app_hw.c      ****  *
 263:app_hw.c      ****  *  DESCRIPTION
 264:app_hw.c      ****  *      Controls the light device power.
 265:app_hw.c      ****  *
 266:app_hw.c      ****  * PARAMETERS
 267:app_hw.c      ****  *      power_on [in] Turns ON power if TRUE.
 268:app_hw.c      ****  *                    Turns OFF power if FALSE.
 269:app_hw.c      ****  *
 270:app_hw.c      ****  * RETURNS
 271:app_hw.c      ****  *      Nothing.
 272:app_hw.c      ****  *
 273:app_hw.c      ****  *----------------------------------------------------------------------------*/
 274:app_hw.c      **** extern void LightHardwarePowerControl(bool power_on)
 275:app_hw.c      **** {
 276:app_hw.c      ****     IOTLightControlDevicePower(power_on);
 277:app_hw.c      **** }
 278:app_hw.c      **** 
 279:app_hw.c      **** /*----------------------------------------------------------------------------*
 280:app_hw.c      ****  *  NAME
 281:app_hw.c      ****  *      LightHardwareSetColor
 282:app_hw.c      ****  *
 283:app_hw.c      ****  *  DESCRIPTION
 284:app_hw.c      ****  *      Controls the color of the light.
 285:app_hw.c      ****  *
 286:app_hw.c      ****  * PARAMETERS
 287:app_hw.c      ****  *      red   [in] 0-255 levels of Red colour component.
 288:app_hw.c      ****  *      green [in] 0-255 levels of Green colour component.
 289:app_hw.c      ****  *      blue  [in] 0-255 levels of Blue colour component.
 290:app_hw.c      ****  *
 291:app_hw.c      ****  * RETURNS
 292:app_hw.c      ****  *      TRUE  if set color is supported by device.
 293:app_hw.c      ****  *      FALSE if it device is a white light or mono-chromatic light.
 294:app_hw.c      ****  *
 295:app_hw.c      ****  *----------------------------------------------------------------------------*/
 296:app_hw.c      **** extern bool LightHardwareSetColor(uint8 red, uint8 green, uint8 blue)
 297:app_hw.c      **** {
 298:app_hw.c      ****     bool status = FALSE;
 299:app_hw.c      **** 
 300:app_hw.c      ****     status = TRUE;
 301:app_hw.c      ****     IOTLightControlDeviceSetColor(red, green, blue);
 302:app_hw.c      **** 
 303:app_hw.c      ****     return status;
 304:app_hw.c      **** }
 305:app_hw.c      **** 
 306:app_hw.c      **** /*----------------------------------------------------------------------------*
 307:app_hw.c      ****  *  NAME
 308:app_hw.c      ****  *      LightHardwareSetLevel
 309:app_hw.c      ****  *
 310:app_hw.c      ****  *  DESCRIPTION
 311:app_hw.c      ****  *      Controls the brightness of the White light.
 312:app_hw.c      ****  *
 313:app_hw.c      ****  * PARAMETERS
 314:app_hw.c      ****  *      red   [in] 0-255 levels of Red colour component.
 315:app_hw.c      ****  *      green [in] 0-255 levels of Green colour component.
 316:app_hw.c      ****  *      blue  [in] 0-255 levels of Blue colour component.
 317:app_hw.c      ****  *      level [in] 0-255 levels of intensity.
 318:app_hw.c      ****  *
 319:app_hw.c      ****  * RETURNS
 320:app_hw.c      ****  *      Nothing.
 321:app_hw.c      ****  *
 322:app_hw.c      ****  *----------------------------------------------------------------------------*/
 323:app_hw.c      **** extern void LightHardwareSetLevel(uint8 red, uint8 green, uint8 blue, 
 324:app_hw.c      ****                                   uint8 level)
 325:app_hw.c      **** {
 326:app_hw.c      ****     /* The brightness level is represented through RGB values */
 327:app_hw.c      ****     uint32 temp;
 328:app_hw.c      ****     temp  = (uint32)(red * level)/255;
 329:app_hw.c      ****     red = temp & 0xFF;
 330:app_hw.c      ****     temp  = (uint32)(green * level)/255;
 331:app_hw.c      ****     green = temp & 0xFF;
 332:app_hw.c      ****     temp  = (uint32)(blue * level)/255;
 333:app_hw.c      ****     blue = temp & 0xFF;
 334:app_hw.c      ****     IOTLightControlDeviceSetColor(red, green, blue);
 335:app_hw.c      **** }
 336:app_hw.c      **** 
 337:app_hw.c      **** #ifdef COLOUR_TEMP_ENABLED
 338:app_hw.c      **** /*----------------------------------------------------------------------------*
 339:app_hw.c      ****  *  NAME
 340:app_hw.c      ****  *      LightHardwareSetColorTemp
 341:app_hw.c      ****  *
 342:app_hw.c      ****  *  DESCRIPTION
 343:app_hw.c      ****  *      Controls the colour temperature.
 344:app_hw.c      ****  *
 345:app_hw.c      ****  * PARAMETERS
 346:app_hw.c      ****  *      temp   [in] Colour temperature in Kelvin.
 347:app_hw.c      ****  *
 348:app_hw.c      ****  * RETURNS
 349:app_hw.c      ****  *      TRUE  if Colour Temperature setting is supported by device.
 350:app_hw.c      ****  *      FALSE if Colour Temperature setting is NOT supported.
 351:app_hw.c      ****  *
 352:app_hw.c      ****  *----------------------------------------------------------------------------*/
 353:app_hw.c      **** extern bool LightHardwareSetColorTemp(uint16 temp)
 354:app_hw.c      **** {
 355:app_hw.c      ****     uint8  red, green, blue;
 356:app_hw.c      **** 
 357:app_hw.c      ****     red   = getLevelFromCCTLut(temp, cct_red_lut, LUT_SIZE(cct_red_lut));
 358:app_hw.c      ****     green = getLevelFromCCTLut(temp, cct_green_lut, LUT_SIZE(cct_green_lut));
 359:app_hw.c      ****     blue  = getLevelFromCCTLut(temp, cct_blue_lut, LUT_SIZE(cct_blue_lut));
 360:app_hw.c      **** 
 361:app_hw.c      ****     return LightHardwareSetColor(red, green, blue);
 362:app_hw.c      **** }
 363:app_hw.c      **** 
 364:app_hw.c      **** /*----------------------------------------------------------------------------*
 365:app_hw.c      ****  *  NAME
 366:app_hw.c      ****  *      LightHardwareGetRGBFromColorTemp
 367:app_hw.c      ****  *
 368:app_hw.c      ****  *  DESCRIPTION
 369:app_hw.c      ****  *      The function gets the RGB values for the passed color temperature.
 370:app_hw.c      ****  *
 371:app_hw.c      ****  * PARAMETERS
 372:app_hw.c      ****  *      temp   [in] Colour temperature in Kelvin.
 373:app_hw.c      ****  *      red    [out] red value based on color temp.
 374:app_hw.c      ****  *      green  [out] green value based on color temp
 375:app_hw.c      ****  *      blue   [out] blue value based on color temp
 376:app_hw.c      ****  *
 377:app_hw.c      ****  * RETURNS
 378:app_hw.c      ****  *      None
 379:app_hw.c      ****  *
 380:app_hw.c      ****  *----------------------------------------------------------------------------*/
 381:app_hw.c      **** extern void LightHardwareGetRGBFromColorTemp(uint16 temp, uint8 *red, 
 382:app_hw.c      ****                                              uint8 *green, uint8 *blue)
 383:app_hw.c      **** {
 384:app_hw.c      ****     *red   = getLevelFromCCTLut(temp, cct_red_lut, LUT_SIZE(cct_red_lut));
 385:app_hw.c      ****     *green = getLevelFromCCTLut(temp, cct_green_lut, LUT_SIZE(cct_green_lut));
 386:app_hw.c      ****     *blue  = getLevelFromCCTLut(temp, cct_blue_lut, LUT_SIZE(cct_blue_lut));
 387:app_hw.c      **** }
 388:app_hw.c      **** 
 389:app_hw.c      **** #endif /* COLOUR_TEMP_ENABLED */
 390:app_hw.c      **** 
 391:app_hw.c      **** /*----------------------------------------------------------------------------*
 392:app_hw.c      ****  *  NAME
 393:app_hw.c      ****  *      LightHardwareSetBlink
 394:app_hw.c      ****  *
 395:app_hw.c      ****  *  DESCRIPTION
 396:app_hw.c      ****  *      Controls the blink colour and duration of light.
 397:app_hw.c      ****  *
 398:app_hw.c      ****  * PARAMETERS
 399:app_hw.c      ****  *      red      [in] 0-255 levels of Red colour component.
 400:app_hw.c      ****  *      green    [in] 0-255 levels of Green colour component.
 401:app_hw.c      ****  *      blue     [in] 0-255 levels of Blue colour component.
 402:app_hw.c      ****  *      on_time  [in] ON duration in multiples of 16ms.
 403:app_hw.c      ****  *      off_time [in] OFF duration in multiples of 16ms.
 404:app_hw.c      ****  *
 405:app_hw.c      ****  * RETURNS
 406:app_hw.c      ****  *      TRUE  if light blink is supported by device.
 407:app_hw.c      ****  *      FALSE if light blink is NOT supported.
 408:app_hw.c      ****  *
 409:app_hw.c      ****  *----------------------------------------------------------------------------*/
 410:app_hw.c      **** extern bool LightHardwareSetBlink(uint8 red, uint8 green, uint8 blue,
 411:app_hw.c      ****                                   uint8 on_time, uint8 off_time)
 412:app_hw.c      **** {
  20                 	:
  21                 		enterl	#0x0005
  22 0000 FB 0B       	.LCFI0:
  23                 		.loc 1 414 0
 413:app_hw.c      ****     IOTLightControlDeviceBlink(red, green, blue, on_time, off_time);
  24                 	X,@(0x0005,Y)
  25 0001 05 1B       		st	X,@(0,Y)
  26 0002 00 2B       		ld	X,@(0x0006,Y)
  27 0003 06 1B       		st	X,@(0x0001,Y)
  28 0004 01 2B       		ld	X,@(0x0007,Y)
  29 0005 07 1B       		st	X,@(0x0002,Y)
  30 0006 02 2B       		bsr	IOTLightControlDeviceBlink
  31 0007 00 00 00 00 	.LVL1:
  31      00 9C 
  32                 		.loc 1 416 0
 414:app_hw.c      ****     return TRUE;
 415:app_hw.c      **** }
  33                 	x0001
  34 000a 01 14       		leavel	#0x0005
  35 000b FB 0F       	.LFE7:
  36                 		.size	LightHardwareSetBlink, .-LightHardwareSetBlink
  37                 		.global	__size_of_LightHardwareSetBlink
  38                 		.equ	__size_of_LightHardwareSetBlink,. - LightHardwareSetBlink
  39                 		.section	.text.LightHardwareSetLevel,"ax",@progbits
  40                 		.global	LightHardwareSetLevel
  41                 		.type	LightHardwareSetLevel, @function
  42                 	LightHardwareSetLevel:
  43                 	.LFB6:
  44                 		.loc 1 326 0
 326:app_hw.c      **** {
  45                 	rl	#0x0002
  46                 	.LCFI1:
  47 0000 FE 0B       		st	AL,@0xfff8
  48                 		st	AH,@0xfffa
  49 0001 F8 25       		ld	X,@(0x0003,Y)
  50 0002 FA 21       		.loc 1 329 0
  51 0003 03 1B       		ld	AL,@$XAP_UXL
 329:app_hw.c      ****     temp  = (uint32)(red * level)/255;
  52                 		smult	@0xfff8
  53 0004 00 00 00 15 	.LVL4:
  54                 		ld	AH,#0x0000
  55 0006 F8 91       		udiv	#0x00ff
  56                 		st	AL,@0xfff9
  57 0007 00 10       		.loc 1 331 0
  58 0008 00 09 01 00 		ld	AL,@$XAP_UXL
  58      FF 94 
  59 000b F9 25       		smult	@0xfffa
 331:app_hw.c      ****     temp  = (uint32)(green * level)/255;
  60                 	0x0000
  61 000c 00 00 00 15 		udiv	#0x00ff
  62 000e FA 91       		st	AL,@0xfff8
  63 000f 00 10       	.LVL5:
  64 0010 00 09 01 00 		.loc 1 333 0
  64      FF 94 
  65 0013 F8 25       		ld	AL,@$XAP_UXL
  66                 		smult	@(0x0002,Y)
 333:app_hw.c      ****     temp  = (uint32)(blue * level)/255;
  67                 	#0x0000
  68 0014 00 00 00 15 		udiv	#0x00ff
  69 0016 02 93       		.loc 1 335 0
  70 0017 00 10       		ld	X,@0xfff9
  71 0018 00 09 01 00 		and	X,#0x00ff
  71      FF 94 
 335:app_hw.c      ****     IOTLightControlDeviceSetColor(red, green, blue);
  72                 	,@0xfff9
  73 001b F9 19       		ld	X,@0xfff8
  74 001c 01 00 FF C8 		and	X,#0x00ff
  75 001e F9 29       		and	AL,#0x00ff
  76 001f F8 19       		st	AL,@(0x0002,Y)
  77 0020 01 00 FF C8 		ld	AL,@0xfff9
  78 0022 01 00 FF C4 		ld	AH,@$XAP_UXL
  79 0024 02 27       		.loc 1 336 0
  80 0025 F9 15       		ld	X,@(0x0000,Y)
  81 0026 00 00 00 11 		add	Y,#0x0002
 336:app_hw.c      **** }
  82                 	5 0
  83 0028 00 1B       		bra	IOTLightControlDeviceSetColor
  84 0029 02 3C       	.LVL6:
 335:app_hw.c      ****     IOTLightControlDeviceSetColor(red, green, blue);
  85                 	.LFE6:
  86 002a 00 00 00 00 		.size	LightHardwareSetLevel, .-LightHardwareSetLevel
  86      00 E0 
  87                 		.global	__size_of_LightHardwareSetLevel
  88                 		.equ	__size_of_LightHardwareSetLevel,. - LightHardwareSetLevel
  89                 		.section	.text.LightHardwareSetColor,"ax",@progbits
  90                 		.global	LightHardwareSetColor
  91                 		.type	LightHardwareSetColor, @function
  92                 	LightHardwareSetColor:
  93                 	.LFB5:
  94                 		.loc 1 298 0
  95                 	.LVL7:
  96                 		enterl	#0x0003
 298:app_hw.c      **** {
  97                 	 302 0
  98                 		ld	X,@(0x0003,Y)
  99 0000 FD 0B       		st	X,@(0,Y)
 100                 		bsr	IOTLightControlDeviceSetColor
 302:app_hw.c      ****     IOTLightControlDeviceSetColor(red, green, blue);
 101                 	8:
 102 0001 03 1B       		.loc 1 305 0
 103 0002 00 2B       		ld	AL,#0x0001
 104 0003 00 00 00 00 		leavel	#0x0003
 104      00 9C 
 105                 	.LFE5:
 305:app_hw.c      **** }
 106                 	e	LightHardwareSetColor, .-LightHardwareSetColor
 107 0006 01 14       		.global	__size_of_LightHardwareSetColor
 108 0007 FD 0F       		.equ	__size_of_LightHardwareSetColor,. - LightHardwareSetColor
 109                 		.section	.text.LightHardwarePowerControl,"ax",@progbits
 110                 		.global	LightHardwarePowerControl
 111                 		.type	LightHardwarePowerControl, @function
 112                 	LightHardwarePowerControl:
 113                 	.LFB4:
 114                 		.loc 1 276 0
 115                 	.LVL9:
 116                 		.loc 1 277 0
 117                 		bra	IOTLightControlDevicePower
 276:app_hw.c      **** {
 118                 	4:
 119                 		.size	LightHardwarePowerControl, .-LightHardwarePowerControl
 277:app_hw.c      ****     IOTLightControlDevicePower(power_on);
 120                 	global	__size_of_LightHardwarePowerControl
 121 0000 00 00 00 00 		.equ	__size_of_LightHardwarePowerControl,. - LightHardwarePowerControl
 121      00 E0 
 122                 		.section	.text.LightHardwareInit,"ax",@progbits
 123                 		.global	LightHardwareInit
 124                 		.type	LightHardwareInit, @function
 125                 	LightHardwareInit:
 126                 	.LFB3:
 127                 		.loc 1 255 0
 128                 		.loc 1 257 0
 129                 		bra	IOTSwitchInit
 130                 	.LFE3:
 131                 		.size	LightHardwareInit, .-LightHardwareInit
 255:app_hw.c      **** {
 132                 	ize_of_LightHardwareInit
 257:app_hw.c      ****     IOTSwitchInit();
 133                 	.equ	__size_of_LightHardwareInit,. - LightHardwareInit
 134 0000 00 00 00 00 		.section	.text.HandlePIOChangedEvent,"ax",@progbits
 134      00 E0 
 135                 		.global	HandlePIOChangedEvent
 136                 		.type	HandlePIOChangedEvent, @function
 137                 	HandlePIOChangedEvent:
 138                 	.LFB2:
 139                 		.loc 1 217 0
 140                 	.LVL11:
 141                 		enterl	#0x0009
 142                 	.LCFI3:
 143                 		st	AL,@(0x0005,Y)
 217:app_hw.c      **** {
 144                 	 0
 145                 		ld	AL,@$XAP_UY
 146 0000 F7 0B       	.LVL12:
 147                 		add	AL,#0x0002
 148 0001 05 27       		st	AL,@(0x0006,Y)
 226:app_hw.c      ****     GetIOTSwitchMask(PIN_ESP_ACK, &sw1_mask, &sw1_index);
 149                 	,@$XAP_UY
 150 0002 00 00 00 15 		add	X,#0x0001
 151                 		st	X,@(0,Y)
 152 0004 02 34       		ld	AL,#0x000d
 153 0005 06 27       		ld	AH,@(0x0006,Y)
 154 0006 00 00 00 19 		bsr	GetIOTSwitchMask
 155 0008 01 38       		.loc 1 229 0
 156 0009 00 2B       		ld	AH,@(0x0001,Y)
 157 000a 0D 14       	.LVL13:
 158 000b 06 13       		ld	AL,@(0x0006,Y)
 159 000c 00 00 00 00 		add	AL,@$XAP_AH
 159      00 9C 
 229:app_hw.c      ****     if((event_data->pio_cause.mask[sw1_index] & sw1_mask.mask[sw1_index]))
 160                 	0006,Y)
 161 000f 01 13       		add	AH,@(0x0005,Y)
 162                 		ld	X,@$XAP_AL
 163 0010 06 17       		ld	AL,@(0,X)
 164 0011 00 00 00 35 		ld	X,@$XAP_AH
 165 0013 06 27       		and	AL,@(0x0003,X)
 166 0014 05 33       		beq	.L13
 167 0015 00 00 00 19 		.loc 1 231 0
 168 0017 00 16       		ld	AL,@tId_UART_TX_ACK
 169 0018 00 00 00 19 		beq	.L13
 170 001a 03 C6       		.loc 1 233 0
 171 001b 00 00 00 00 		bsr	TimerDelete
 171      00 F4 
 231:app_hw.c      ****         if(tId_UART_TX_ACK != TIMER_INVALID) /* Make sure that previously data has been sent, then 
 172                 	0
 173 001e 00 00 00 15 		ld	AL,#0x0000
 174 0020 00 00 00 00 		st	AL,@tId_UART_TX_ACK
 174      00 F4 
 233:app_hw.c      ****             TimerDelete(tId_UART_TX_ACK);
 175                 	oc 1 235 0
 176 0023 00 00 00 00 		ld	AL,#0x0001
 176      00 9C 
 234:app_hw.c      ****             tId_UART_TX_ACK = TIMER_INVALID;            
 177                 	sr	setUartTxAckFlag
 178 0026 00 14       	.L13:
 179 0027 00 00 00 25 		.loc 1 238 0
 235:app_hw.c      ****             setUartTxAckFlag(SUCCESS);
 180                 	avel	#0x0009
 181 0029 01 14       	.LFE2:
 182 002a 00 00 00 00 		.size	HandlePIOChangedEvent, .-HandlePIOChangedEvent
 182      00 9C 
 183                 		.global	__size_of_HandlePIOChangedEvent
 238:app_hw.c      **** }
 184                 	u	__size_of_HandlePIOChangedEvent,. - HandlePIOChangedEvent
 185 002d F7 0F       		.comm lot_model_groups, 35, 1
 186                 	
 187                 		.comm extension_model_groups, 35, 1
 188                 	
 189                 		.comm grp_model_groups, 35, 1
 190                 	
 191                 		.section	.debug_frame,"",@progbits
 192                 	.Lframe0:
 193                 		.4byte	.LECIE0-.LSCIE0
 194                 	.LSCIE0:
 195                 		.4byte	0xffffffff
 196                 		.1byte	0x1
 197                 		.ascii "\000"
 198 0000 00 00 00 00 		.1byte	0x1
 199                 		.1byte	0x7f
 200 0002 FF FF FF FF 		.1byte	0x3
 201 0004 01          		.1byte	0xc
 202 0004 00          		.1byte	0x5
 203 0005 01          		.1byte	0x0
 204 0005 7F          		.p2align	2
 205 0006 03          	.LECIE0:
 206 0006 0C          	.LSFDE0:
 207 0007 05          		.4byte	.LEFDE0-.LASFDE0
 208 0007 00          	.LASFDE0:
 209                 		.4byte	.Lframe0
 210                 		.4byte	.LFB7
 211                 		.4byte	.LFE7-.LFB7
 212 0008 00 00 00 00 		.1byte	0x4
 213                 		.4byte	.LCFI0-.LFB7
 214 000a 00 00 00 00 		.1byte	0xe
 215 000c 00 00 00 00 		.1byte	0x5
 216 000e 00 00 00 00 		.1byte	0x83
 217 0010 41          		.1byte	0x2
 218                 		.1byte	0x82
 219 0010 0E          		.1byte	0x1
 220 0011 05          		.p2align	2
 221 0011 83          	.LEFDE0:
 222 0012 02          	.LSFDE2:
 223 0012 82          		.4byte	.LEFDE2-.LASFDE2
 224 0013 01          	.LASFDE2:
 225 0013 00          		.4byte	.Lframe0
 226                 		.4byte	.LFB6
 227                 		.4byte	.LFE6-.LFB6
 228 0014 00 00 00 00 		.1byte	0x4
 229                 		.4byte	.LCFI1-.LFB6
 230 0016 00 00 00 00 		.1byte	0xe
 231 0018 00 00 00 00 		.1byte	0x2
 232 001a 00 00 00 00 		.1byte	0x83
 233 001c 41          		.1byte	0x2
 234                 		.1byte	0x82
 235 001c 0E          		.1byte	0x1
 236 001d 02          		.p2align	2
 237 001d 83          	.LEFDE2:
 238 001e 02          	.LSFDE4:
 239 001e 82          		.4byte	.LEFDE4-.LASFDE4
 240 001f 01          	.LASFDE4:
 241 001f 00          		.4byte	.Lframe0
 242                 		.4byte	.LFB5
 243                 		.4byte	.LFE5-.LFB5
 244 0020 00 00 00 00 		.1byte	0x4
 245                 		.4byte	.LCFI2-.LFB5
 246 0022 00 00 00 00 		.1byte	0xe
 247 0024 00 00 00 00 		.1byte	0x3
 248 0026 00 00 00 00 		.1byte	0x83
 249 0028 41          		.1byte	0x2
 250                 		.1byte	0x82
 251 0028 0E          		.1byte	0x1
 252 0029 03          		.p2align	2
 253 0029 83          	.LEFDE4:
 254 002a 02          	.LSFDE6:
 255 002a 82          		.4byte	.LEFDE6-.LASFDE6
 256 002b 01          	.LASFDE6:
 257 002b 00          		.4byte	.Lframe0
 258                 		.4byte	.LFB4
 259                 		.4byte	.LFE4-.LFB4
 260 002c 00 00 00 00 		.p2align	2
 261                 	.LEFDE6:
 262 002e 00 00 00 00 	.LSFDE8:
 263 0030 00 00 00 00 		.4byte	.LEFDE8-.LASFDE8
 264 0032 00 00 00 00 	.LASFDE8:
 265                 		.4byte	.Lframe0
 266                 		.4byte	.LFB3
 267                 		.4byte	.LFE3-.LFB3
 268 0034 00 00 00 00 		.p2align	2
 269                 	.LEFDE8:
 270 0036 00 00 00 00 	.LSFDE10:
 271 0038 00 00 00 00 		.4byte	.LEFDE10-.LASFDE10
 272 003a 00 00 00 00 	.LASFDE10:
 273                 		.4byte	.Lframe0
 274                 		.4byte	.LFB2
 275                 		.4byte	.LFE2-.LFB2
 276 003c 00 00 00 00 		.1byte	0x4
 277                 		.4byte	.LCFI3-.LFB2
 278 003e 00 00 00 00 		.1byte	0xe
 279 0040 00 00 00 00 		.1byte	0x9
 280 0042 00 00 00 00 		.1byte	0x83
 281 0044 41          		.1byte	0x2
 282                 		.1byte	0x82
 283 0044 0E          		.1byte	0x1
 284 0045 09          		.p2align	2
 285 0045 83          	.LEFDE10:
 286 0046 02          		.text
 287 0046 82          	.Letext0:
 288 0047 01          		.section	.debug_loc,"",@progbits
 289 0047 00          	.Ldebug_loc0:
 290                 	.LLST0:
 291                 		.4byte	.LFB7
 292                 		.4byte	.LCFI0
 293                 		.2byte	0x1
 294                 		.1byte	0x55
 295                 		.4byte	.LCFI0
 296 0000 00 00 00 00 		.4byte	.LFE7
 297 0002 00 00 00 00 		.2byte	0x2
 298 0004 00 01       		.1byte	0x75
 299 0005 55          		.1byte	0x5
 300 0005 00 00 00 00 		.4byte	0x0
 301 0007 00 00 00 00 		.4byte	0x0
 302 0009 00 02       	.LLST1:
 303 000a 75          		.4byte	.LVL0
 304 000b 05          		.4byte	.LVL1
 305 000b 00 00 00 00 		.2byte	0x1
 306 000d 00 00 00 00 		.1byte	0x51
 307                 		.4byte	0x0
 308 000f 00 00 00 00 		.4byte	0x0
 309 0011 00 00 00 00 	.LLST2:
 310 0013 00 01       		.4byte	.LVL0
 311 0014 51          		.4byte	.LVL1
 312 0015 00 00 00 00 		.2byte	0x1
 313 0017 00 00 00 00 		.1byte	0x50
 314                 		.4byte	0x0
 315 0019 00 00 00 00 		.4byte	0x0
 316 001b 00 00 00 00 	.LLST3:
 317 001d 00 01       		.4byte	.LFB6
 318 001e 50          		.4byte	.LCFI1
 319 001e 00 00 00 00 		.2byte	0x1
 320 0020 00 00 00 00 		.1byte	0x55
 321                 		.4byte	.LCFI1
 322 0022 00 00 00 00 		.4byte	.LFE6
 323 0024 00 00 00 00 		.2byte	0x2
 324 0026 00 01       		.1byte	0x75
 325 0027 55          		.1byte	0x2
 326 0028 00 00 00 00 		.4byte	0x0
 327 002a 00 00 00 00 		.4byte	0x0
 328 002c 00 02       	.LLST4:
 329 002d 75          		.4byte	.LVL2
 330 002d 02          		.4byte	.LVL3
 331 002e 00 00 00 00 		.2byte	0x1
 332 0030 00 00 00 00 		.1byte	0x51
 333                 		.4byte	.LVL3
 334 0032 00 00 00 00 		.4byte	.LVL5
 335 0034 00 00 00 00 		.2byte	0x1
 336 0036 00 01       		.1byte	0x57
 337 0037 51          		.4byte	0x0
 338 0037 00 00 00 00 		.4byte	0x0
 339 0039 00 00 00 00 	.LLST5:
 340 003b 00 01       		.4byte	.LVL2
 341 003c 57          		.4byte	.LVL4
 342 003d 00 00 00 00 		.2byte	0x1
 343 003f 00 00 00 00 		.1byte	0x50
 344                 		.4byte	.LVL4
 345 0041 00 00 00 00 		.4byte	.LVL6
 346 0043 00 00 00 00 		.2byte	0x1
 347 0045 00 01       		.1byte	0x59
 348 0046 50          		.4byte	0x0
 349 0046 00 00 00 00 		.4byte	0x0
 350 0048 00 00 00 00 	.LLST6:
 351 004a 00 01       		.4byte	.LFB5
 352 004b 59          		.4byte	.LCFI2
 353 004c 00 00 00 00 		.2byte	0x1
 354 004e 00 00 00 00 		.1byte	0x55
 355                 		.4byte	.LCFI2
 356 0050 00 00 00 00 		.4byte	.LFE5
 357 0052 00 00 00 00 		.2byte	0x2
 358 0054 00 01       		.1byte	0x75
 359 0055 55          		.1byte	0x3
 360 0055 00 00 00 00 		.4byte	0x0
 361 0057 00 00 00 00 		.4byte	0x0
 362 0059 00 02       	.LLST7:
 363 005a 75          		.4byte	.LVL7
 364 005b 03          		.4byte	.LVL8
 365 005b 00 00 00 00 		.2byte	0x1
 366 005d 00 00 00 00 		.1byte	0x51
 367                 		.4byte	0x0
 368 005f 00 00 00 00 		.4byte	0x0
 369 0061 00 00 00 00 	.LLST8:
 370 0063 00 01       		.4byte	.LVL7
 371 0064 51          		.4byte	.LVL8
 372 0065 00 00 00 00 		.2byte	0x1
 373 0067 00 00 00 00 		.1byte	0x50
 374                 		.4byte	0x0
 375 0069 00 00 00 00 		.4byte	0x0
 376 006b 00 00 00 00 	.LLST10:
 377 006d 00 01       		.4byte	.LVL9
 378 006e 50          		.4byte	.LVL10
 379 006e 00 00 00 00 		.2byte	0x1
 380 0070 00 00 00 00 		.1byte	0x51
 381                 		.4byte	0x0
 382 0072 00 00 00 00 		.4byte	0x0
 383 0074 00 00 00 00 	.LLST12:
 384 0076 00 01       		.4byte	.LFB2
 385 0077 51          		.4byte	.LCFI3
 386 0078 00 00 00 00 		.2byte	0x1
 387 007a 00 00 00 00 		.1byte	0x55
 388                 		.4byte	.LCFI3
 389 007c 00 00 00 00 		.4byte	.LFE2
 390 007e 00 00 00 00 		.2byte	0x2
 391 0080 00 01       		.1byte	0x75
 392 0081 55          		.1byte	0x9
 393 0081 00 00 00 00 		.4byte	0x0
 394 0083 00 00 00 00 		.4byte	0x0
 395 0085 00 02       	.LLST13:
 396 0086 75          		.4byte	.LVL11
 397 0087 09          		.4byte	.LVL12
 398 0087 00 00 00 00 		.2byte	0x1
 399 0089 00 00 00 00 		.1byte	0x51
 400                 		.4byte	.LVL12
 401 008b 00 00 00 00 		.4byte	.LFE2
 402 008d 00 00 00 00 		.2byte	0x2
 403 008f 00 01       		.1byte	0x76
 404 0090 51          		.1byte	0x5
 405 0091 00 00 00 00 		.4byte	0x0
 406 0093 00 00 00 00 		.4byte	0x0
 407 0095 00 02       		.file 2 "C:/CSR102x_SDK-3.1.1/tools/include/CSR102x_A06/uenergy_types.h"
 408 0096 76          		.file 3 "C:/CSR102x_SDK-3.1.1/tools/include/CSR102x_A06/types.h"
 409 0096 05          		.file 4 "C:/CSR102x_SDK-3.1.1/tools/include/CSR102x_A06/timer.h"
 410 0097 00 00 00 00 		.file 5 "C:/CSR102x_SDK-3.1.1/tools/include/CSR102x_A06/sys_events.h"
 411 0099 00 00 00 00 		.file 6 "app_mesh_handler.h"
 412                 		.section	.debug_info
 413                 		.4byte	0x31f
 414                 		.2byte	0x2
 415                 		.4byte	.Ldebug_abbrev0
 416                 		.1byte	0x4
 417                 		.1byte	0x1
 418 0000 00 00 03 1F 		.4byte	.LASF41
 419 0002 00 02       		.1byte	0x1
 420 0003 00 00 00 00 		.4byte	.LASF42
 421 0005 04          		.4byte	.LASF43
 422 0005 01          		.4byte	0x0
 423 0006 00 00 00 00 		.4byte	0x0
 424 0008 01          		.4byte	.Ldebug_ranges0+0x0
 425 0008 00 00 00 00 		.4byte	.Ldebug_line0
 426 000a 00 00 00 00 		.1byte	0x2
 427 000c 00 00 00 00 		.1byte	0x2
 428 000e 00 00 00 00 		.1byte	0x5
 429 0010 00 00 00 00 		.ascii "int\000"
 430 0012 00 00 00 00 		.1byte	0x3
 431 0014 02          		.1byte	0x2
 432 0015 02          		.1byte	0x7
 433 0015 05          		.4byte	.LASF0
 434 0016 69 6E 74 00 		.1byte	0x3
 435 0018 03          		.1byte	0x2
 436 0018 02          		.1byte	0x5
 437 0019 07          		.4byte	.LASF1
 438 0019 00 00 00 00 		.1byte	0x3
 439 001b 03          		.1byte	0x2
 440 001c 02          		.1byte	0x7
 441 001c 05          		.4byte	.LASF2
 442 001d 00 00 00 00 		.1byte	0x3
 443 001f 03          		.1byte	0x4
 444 001f 02          		.1byte	0x5
 445 0020 07          		.4byte	.LASF3
 446 0020 00 00 00 00 		.1byte	0x3
 447 0022 03          		.1byte	0x4
 448 0023 04          		.1byte	0x7
 449 0023 05          		.4byte	.LASF4
 450 0024 00 00 00 00 		.1byte	0x3
 451 0026 03          		.1byte	0x8
 452 0026 04          		.1byte	0x5
 453 0027 07          		.4byte	.LASF5
 454 0027 00 00 00 00 		.1byte	0x3
 455 0029 03          		.1byte	0x8
 456 002a 08          		.1byte	0x7
 457 002a 05          		.4byte	.LASF6
 458 002b 00 00 00 00 		.1byte	0x4
 459 002d 03          		.4byte	.LASF8
 460 002d 08          		.1byte	0x2
 461 002e 07          		.1byte	0x21
 462 002e 00 00 00 00 		.4byte	0x6c
 463 0030 04          		.1byte	0x3
 464 0031 00 00 00 00 		.1byte	0x2
 465 0033 02          		.1byte	0x8
 466 0033 21          		.4byte	.LASF7
 467 0034 00 00 00 6C 		.1byte	0x4
 468 0036 03          		.4byte	.LASF9
 469 0036 02          		.1byte	0x2
 470 0037 08          		.1byte	0x24
 471 0037 00 00 00 00 		.4byte	0x3e
 472 0039 04          		.1byte	0x4
 473 003a 00 00 00 00 		.4byte	.LASF10
 474 003c 02          		.1byte	0x2
 475 003c 24          		.1byte	0x27
 476 003d 00 00 00 3E 		.4byte	0x4c
 477 003f 04          		.1byte	0x3
 478 003f 00 00 00 00 		.1byte	0x2
 479 0041 02          		.1byte	0x6
 480 0042 27          		.4byte	.LASF11
 481 0042 00 00 00 4C 		.1byte	0x4
 482 0044 03          		.4byte	.LASF12
 483 0045 02          		.1byte	0x2
 484 0045 06          		.1byte	0x36
 485 0046 00 00 00 00 		.4byte	0x30
 486 0048 04          		.1byte	0x5
 487 0048 00 00 00 00 		.1byte	0x6
 488 004a 02          		.1byte	0x3
 489 004b 36          		.1byte	0x71
 490 004b 00 00 00 30 		.4byte	0xb2
 491 004d 05          		.1byte	0x6
 492 004e 06          		.4byte	.LASF15
 493 004e 03          		.1byte	0x3
 494 004f 71          		.1byte	0x72
 495 004f 00 00 00 B2 		.4byte	0xb2
 496 0051 06          		.1byte	0x2
 497 0052 00 00 00 00 		.1byte	0x23
 498 0054 03          		.1byte	0x0
 499 0054 72          		.1byte	0x0
 500 0055 00 00 00 B2 		.1byte	0x7
 501 0057 02          		.4byte	0x73
 502 0057 23          		.4byte	0xc2
 503 0058 00          		.1byte	0x8
 504 0058 00          		.4byte	0xc2
 505 0059 07          		.1byte	0x2
 506 0059 00 00 00 73 		.1byte	0x0
 507 005b 00 00 00 C2 		.1byte	0x9
 508 005d 08          		.1byte	0x2
 509 005e 00 00 00 C2 		.1byte	0x7
 510 0060 02          		.1byte	0x4
 511 0060 00          		.4byte	.LASF13
 512 0061 09          		.1byte	0x3
 513 0061 02          		.1byte	0x73
 514 0062 07          		.4byte	0x9b
 515 0062 04          		.1byte	0x4
 516 0063 00 00 00 00 		.4byte	.LASF14
 517 0065 03          		.1byte	0x4
 518 0065 73          		.1byte	0x65
 519 0066 00 00 00 9B 		.4byte	0x73
 520 0068 04          		.1byte	0x5
 521 0068 00 00 00 00 		.1byte	0xc
 522 006a 04          		.1byte	0x5
 523 006b 65          		.1byte	0x72
 524 006b 00 00 00 73 		.4byte	0x100
 525 006d 05          		.1byte	0x6
 526 006e 0C          		.4byte	.LASF16
 527 006e 05          		.1byte	0x5
 528 006f 72          		.1byte	0x74
 529 006f 00 00 01 00 		.4byte	0xc5
 530 0071 06          		.1byte	0x2
 531 0072 00 00 00 00 		.1byte	0x23
 532 0074 05          		.1byte	0x0
 533 0074 74          		.1byte	0x6
 534 0075 00 00 00 C5 		.4byte	.LASF17
 535 0077 02          		.1byte	0x5
 536 0077 23          		.1byte	0x7a
 537 0078 00          		.4byte	0xc5
 538 0078 06          		.1byte	0x2
 539 0079 00 00 00 00 		.1byte	0x23
 540 007b 05          		.1byte	0x3
 541 007b 7A          		.1byte	0x0
 542 007c 00 00 00 C5 		.1byte	0x4
 543 007e 02          		.4byte	.LASF18
 544 007e 23          		.1byte	0x5
 545 007f 03          		.1byte	0x7b
 546 007f 00          		.4byte	0xdb
 547 0080 04          		.1byte	0x3
 548 0080 00 00 00 00 		.1byte	0x2
 549 0082 05          		.1byte	0x8
 550 0083 7B          		.4byte	.LASF19
 551 0083 00 00 00 DB 		.1byte	0xa
 552 0085 03          		.1byte	0x1
 553 0086 02          		.4byte	.LASF25
 554 0086 08          		.1byte	0x1
 555 0087 00 00 00 00 		.2byte	0x19d
 556 0089 0A          		.1byte	0x1
 557 0089 01          		.4byte	0x90
 558 008a 00 00 00 00 		.4byte	.LFB7
 559 008c 01          		.4byte	.LFE7
 560 008c 01 9D       		.4byte	.LLST0
 561 008d 01          		.4byte	0x17e
 562 008e 00 00 00 90 		.1byte	0xb
 563 0090 00 00 00 00 		.ascii "red\000"
 564 0092 00 00 00 00 		.1byte	0x1
 565 0094 00 00 00 00 		.2byte	0x19b
 566 0096 00 00 01 7E 		.4byte	0x61
 567 0098 0B          		.4byte	.LLST1
 568 0098 72 65 64 00 		.1byte	0xc
 569 009a 01          		.4byte	.LASF20
 570 009b 01 9B       		.1byte	0x1
 571 009c 00 00 00 61 		.2byte	0x19b
 572 009e 00 00 00 00 		.4byte	0x61
 573 00a0 0C          		.4byte	.LLST2
 574 00a0 00 00 00 00 		.1byte	0xd
 575 00a2 01          		.4byte	.LASF21
 576 00a3 01 9B       		.1byte	0x1
 577 00a4 00 00 00 61 		.2byte	0x19b
 578 00a6 00 00 00 00 		.4byte	0x61
 579 00a8 0D          		.1byte	0x2
 580 00a8 00 00 00 00 		.1byte	0x91
 581 00aa 01          		.1byte	0x0
 582 00ab 01 9B       		.1byte	0xd
 583 00ac 00 00 00 61 		.4byte	.LASF22
 584 00ae 02          		.1byte	0x1
 585 00ae 91          		.2byte	0x19c
 586 00af 00          		.4byte	0x61
 587 00af 0D          		.1byte	0x2
 588 00b0 00 00 00 00 		.1byte	0x91
 589 00b2 01          		.1byte	0x1
 590 00b2 01 9C       		.1byte	0xd
 591 00b3 00 00 00 61 		.4byte	.LASF23
 592 00b5 02          		.1byte	0x1
 593 00b6 91          		.2byte	0x19c
 594 00b6 01          		.4byte	0x61
 595 00b7 0D          		.1byte	0x2
 596 00b7 00 00 00 00 		.1byte	0x91
 597 00b9 01          		.1byte	0x2
 598 00ba 01 9C       		.1byte	0x0
 599 00bb 00 00 00 61 		.1byte	0xe
 600 00bd 02          		.1byte	0x1
 601 00bd 91          		.4byte	.LASF29
 602 00be 02          		.1byte	0x1
 603 00be 00          		.2byte	0x146
 604 00bf 0E          		.1byte	0x1
 605 00bf 01          		.4byte	.LFB6
 606 00c0 00 00 00 00 		.4byte	.LFE6
 607 00c2 01          		.4byte	.LLST3
 608 00c2 01 46       		.4byte	0x1e3
 609 00c3 01          		.1byte	0xb
 610 00c4 00 00 00 00 		.ascii "red\000"
 611 00c6 00 00 00 00 		.1byte	0x1
 612 00c8 00 00 00 00 		.2byte	0x144
 613 00ca 00 00 01 E3 		.4byte	0x61
 614 00cc 0B          		.4byte	.LLST4
 615 00cc 72 65 64 00 		.1byte	0xc
 616 00ce 01          		.4byte	.LASF20
 617 00cf 01 44       		.1byte	0x1
 618 00d0 00 00 00 61 		.2byte	0x144
 619 00d2 00 00 00 00 		.4byte	0x61
 620 00d4 0C          		.4byte	.LLST5
 621 00d4 00 00 00 00 		.1byte	0xd
 622 00d6 01          		.4byte	.LASF21
 623 00d7 01 44       		.1byte	0x1
 624 00d8 00 00 00 61 		.2byte	0x144
 625 00da 00 00 00 00 		.4byte	0x61
 626 00dc 0D          		.1byte	0x2
 627 00dc 00 00 00 00 		.1byte	0x91
 628 00de 01          		.1byte	0x0
 629 00df 01 44       		.1byte	0xd
 630 00e0 00 00 00 61 		.4byte	.LASF24
 631 00e2 02          		.1byte	0x1
 632 00e2 91          		.2byte	0x145
 633 00e3 00          		.4byte	0x61
 634 00e3 0D          		.1byte	0x2
 635 00e4 00 00 00 00 		.1byte	0x91
 636 00e6 01          		.1byte	0x1
 637 00e6 01 45       		.1byte	0xf
 638 00e7 00 00 00 61 		.4byte	.LASF27
 639 00e9 02          		.1byte	0x1
 640 00ea 91          		.2byte	0x148
 641 00ea 01          		.4byte	0x7e
 642 00eb 0F          		.1byte	0x0
 643 00eb 00 00 00 00 		.1byte	0xa
 644 00ed 01          		.1byte	0x1
 645 00ee 01 48       		.4byte	.LASF26
 646 00ef 00 00 00 7E 		.1byte	0x1
 647 00f1 00          		.2byte	0x12a
 648 00f1 0A          		.1byte	0x1
 649 00f2 01          		.4byte	0x90
 650 00f2 00 00 00 00 		.4byte	.LFB5
 651 00f4 01          		.4byte	.LFE5
 652 00f5 01 2A       		.4byte	.LLST6
 653 00f6 01          		.4byte	0x23d
 654 00f6 00 00 00 90 		.1byte	0xb
 655 00f8 00 00 00 00 		.ascii "red\000"
 656 00fa 00 00 00 00 		.1byte	0x1
 657 00fc 00 00 00 00 		.2byte	0x129
 658 00fe 00 00 02 3D 		.4byte	0x61
 659 0100 0B          		.4byte	.LLST7
 660 0101 72 65 64 00 		.1byte	0xc
 661 0103 01          		.4byte	.LASF20
 662 0103 01 29       		.1byte	0x1
 663 0104 00 00 00 61 		.2byte	0x129
 664 0106 00 00 00 00 		.4byte	0x61
 665 0108 0C          		.4byte	.LLST8
 666 0109 00 00 00 00 		.1byte	0xd
 667 010b 01          		.4byte	.LASF21
 668 010b 01 29       		.1byte	0x1
 669 010c 00 00 00 61 		.2byte	0x129
 670 010e 00 00 00 00 		.4byte	0x61
 671 0110 0D          		.1byte	0x2
 672 0111 00 00 00 00 		.1byte	0x91
 673 0113 01          		.1byte	0x0
 674 0113 01 29       		.1byte	0xf
 675 0114 00 00 00 61 		.4byte	.LASF28
 676 0116 02          		.1byte	0x1
 677 0117 91          		.2byte	0x12b
 678 0117 00          		.4byte	0x90
 679 0118 0F          		.1byte	0x0
 680 0118 00 00 00 00 		.1byte	0x10
 681 011a 01          		.1byte	0x1
 682 011b 01 2B       		.4byte	.LASF30
 683 011c 00 00 00 90 		.1byte	0x1
 684 011e 00          		.2byte	0x114
 685 011e 10          		.1byte	0x1
 686 011f 01          		.4byte	.LFB4
 687 011f 00 00 00 00 		.4byte	.LFE4
 688 0121 01          		.1byte	0x1
 689 0122 01 14       		.1byte	0x55
 690 0123 01          		.4byte	0x266
 691 0123 00 00 00 00 		.1byte	0xc
 692 0125 00 00 00 00 		.4byte	.LASF31
 693 0127 01          		.1byte	0x1
 694 0128 55          		.2byte	0x113
 695 0128 00 00 02 66 		.4byte	0x90
 696 012a 0C          		.4byte	.LLST10
 697 012b 00 00 00 00 		.1byte	0x0
 698 012d 01          		.1byte	0x11
 699 012d 01 13       		.1byte	0x1
 700 012e 00 00 00 90 		.4byte	.LASF44
 701 0130 00 00 00 00 		.1byte	0x1
 702 0132 00          		.1byte	0xff
 703 0133 11          		.1byte	0x1
 704 0133 01          		.4byte	.LFB3
 705 0134 00 00 00 00 		.4byte	.LFE3
 706 0136 01          		.1byte	0x1
 707 0136 FF          		.1byte	0x55
 708 0137 01          		.1byte	0x12
 709 0137 00 00 00 00 		.1byte	0x1
 710 0139 00 00 00 00 		.4byte	.LASF32
 711 013b 01          		.1byte	0x1
 712 013c 55          		.1byte	0xd9
 713 013c 12          		.1byte	0x1
 714 013d 01          		.4byte	.LFB2
 715 013d 00 00 00 00 		.4byte	.LFE2
 716 013f 01          		.4byte	.LLST12
 717 0140 D9          		.4byte	0x2c9
 718 0140 01          		.1byte	0x13
 719 0141 00 00 00 00 		.4byte	.LASF33
 720 0143 00 00 00 00 		.1byte	0x1
 721 0145 00 00 00 00 		.1byte	0xd8
 722 0147 00 00 02 C9 		.4byte	0x2c9
 723 0149 13          		.4byte	.LLST13
 724 0149 00 00 00 00 		.1byte	0x14
 725 014b 01          		.4byte	.LASF34
 726 014c D8          		.1byte	0x1
 727 014c 00 00 02 C9 		.1byte	0xda
 728 014e 00 00 00 00 		.4byte	0x2c9
 729 0150 14          		.1byte	0x15
 730 0151 00 00 00 00 		.4byte	.LASF35
 731 0153 01          		.1byte	0x1
 732 0153 DA          		.1byte	0xdb
 733 0154 00 00 02 C9 		.4byte	0xc5
 734 0156 15          		.1byte	0x2
 735 0156 00 00 00 00 		.1byte	0x76
 736 0158 01          		.1byte	0x2
 737 0159 DB          		.1byte	0x15
 738 0159 00 00 00 C5 		.4byte	.LASF36
 739 015b 02          		.1byte	0x1
 740 015c 76          		.1byte	0xdc
 741 015c 02          		.4byte	0x73
 742 015d 15          		.1byte	0x2
 743 015d 00 00 00 00 		.1byte	0x76
 744 015f 01          		.1byte	0x1
 745 0160 DC          		.1byte	0x0
 746 0160 00 00 00 73 		.1byte	0x16
 747 0162 02          		.1byte	0x2
 748 0163 76          		.4byte	0x100
 749 0163 01          		.1byte	0x7
 750 0164 00          		.4byte	0x73
 751 0164 16          		.4byte	0x2df
 752 0165 02          		.1byte	0x8
 753 0165 00 00 01 00 		.4byte	0xc2
 754 0167 07          		.1byte	0x22
 755 0168 00 00 00 73 		.1byte	0x0
 756 016a 00 00 02 DF 		.1byte	0x17
 757 016c 08          		.4byte	.LASF37
 758 016c 00 00 00 C2 		.1byte	0x6
 759 016e 22          		.1byte	0x1a
 760 016f 00          		.4byte	0x2cf
 761 016f 17          		.1byte	0x1
 762 0170 00 00 00 00 		.1byte	0x5
 763 0172 06          		.1byte	0x3
 764 0172 1A          		.4byte	lot_model_groups
 765 0173 00 00 02 CF 		.1byte	0x17
 766 0175 01          		.4byte	.LASF38
 767 0175 05          		.1byte	0x6
 768 0176 03          		.1byte	0x1b
 769 0176 00 00 00 00 		.4byte	0x2cf
 770 0178 17          		.1byte	0x1
 771 0179 00 00 00 00 		.1byte	0x5
 772 017b 06          		.1byte	0x3
 773 017b 1B          		.4byte	extension_model_groups
 774 017c 00 00 02 CF 		.1byte	0x17
 775 017e 01          		.4byte	.LASF39
 776 017e 05          		.1byte	0x6
 777 017f 03          		.1byte	0x1c
 778 017f 00 00 00 00 		.4byte	0x2cf
 779 0181 17          		.1byte	0x1
 780 0182 00 00 00 00 		.1byte	0x5
 781 0184 06          		.1byte	0x3
 782 0184 1C          		.4byte	grp_model_groups
 783 0185 00 00 02 CF 		.1byte	0x18
 784 0187 01          		.4byte	.LASF40
 785 0187 05          		.1byte	0x1
 786 0188 03          		.1byte	0x29
 787 0188 00 00 00 00 		.4byte	0xd0
 788 018a 18          		.1byte	0x1
 789 018b 00 00 00 00 		.1byte	0x1
 790 018d 01          		.1byte	0x0
 791 018d 29          		.section	.debug_abbrev
 792 018e 00 00 00 D0 		.1byte	0x1
 793 0190 01          		.1byte	0x11
 794 0190 01          		.1byte	0x1
 795 0191 00          		.1byte	0x25
 796                 		.1byte	0xe
 797 0000 01          		.1byte	0x13
 798 0000 11          		.1byte	0xb
 799 0001 01          		.1byte	0x3
 800 0001 25          		.1byte	0xe
 801 0002 0E          		.1byte	0x1b
 802 0002 13          		.1byte	0xe
 803 0003 0B          		.1byte	0x11
 804 0003 03          		.1byte	0x1
 805 0004 0E          		.1byte	0x52
 806 0004 1B          		.1byte	0x1
 807 0005 0E          		.1byte	0x55
 808 0005 11          		.1byte	0x6
 809 0006 01          		.1byte	0x10
 810 0006 52          		.1byte	0x6
 811 0007 01          		.1byte	0x0
 812 0007 55          		.1byte	0x0
 813 0008 06          		.1byte	0x2
 814 0008 10          		.1byte	0x24
 815 0009 06          		.1byte	0x0
 816 0009 00          		.1byte	0xb
 817 000a 00          		.1byte	0xb
 818 000a 02          		.1byte	0x3e
 819 000b 24          		.1byte	0xb
 820 000b 00          		.1byte	0x3
 821 000c 0B          		.1byte	0x8
 822 000c 0B          		.1byte	0x0
 823 000d 3E          		.1byte	0x0
 824 000d 0B          		.1byte	0x3
 825 000e 03          		.1byte	0x24
 826 000e 08          		.1byte	0x0
 827 000f 00          		.1byte	0xb
 828 000f 00          		.1byte	0xb
 829 0010 03          		.1byte	0x3e
 830 0010 24          		.1byte	0xb
 831 0011 00          		.1byte	0x3
 832 0011 0B          		.1byte	0xe
 833 0012 0B          		.1byte	0x0
 834 0012 3E          		.1byte	0x0
 835 0013 0B          		.1byte	0x4
 836 0013 03          		.1byte	0x16
 837 0014 0E          		.1byte	0x0
 838 0014 00          		.1byte	0x3
 839 0015 00          		.1byte	0xe
 840 0015 04          		.1byte	0x3a
 841 0016 16          		.1byte	0xb
 842 0016 00          		.1byte	0x3b
 843 0017 03          		.1byte	0xb
 844 0017 0E          		.1byte	0x49
 845 0018 3A          		.1byte	0x13
 846 0018 0B          		.1byte	0x0
 847 0019 3B          		.1byte	0x0
 848 0019 0B          		.1byte	0x5
 849 001a 49          		.1byte	0x13
 850 001a 13          		.1byte	0x1
 851 001b 00          		.1byte	0xb
 852 001b 00          		.1byte	0xb
 853 001c 05          		.1byte	0x3a
 854 001c 13          		.1byte	0xb
 855 001d 01          		.1byte	0x3b
 856 001d 0B          		.1byte	0xb
 857 001e 0B          		.1byte	0x1
 858 001e 3A          		.1byte	0x13
 859 001f 0B          		.1byte	0x0
 860 001f 3B          		.1byte	0x0
 861 0020 0B          		.1byte	0x6
 862 0020 01          		.1byte	0xd
 863 0021 13          		.1byte	0x0
 864 0021 00          		.1byte	0x3
 865 0022 00          		.1byte	0xe
 866 0022 06          		.1byte	0x3a
 867 0023 0D          		.1byte	0xb
 868 0023 00          		.1byte	0x3b
 869 0024 03          		.1byte	0xb
 870 0024 0E          		.1byte	0x49
 871 0025 3A          		.1byte	0x13
 872 0025 0B          		.1byte	0x38
 873 0026 3B          		.1byte	0xa
 874 0026 0B          		.1byte	0x0
 875 0027 49          		.1byte	0x0
 876 0027 13          		.1byte	0x7
 877 0028 38          		.1byte	0x1
 878 0028 0A          		.1byte	0x1
 879 0029 00          		.1byte	0x49
 880 0029 00          		.1byte	0x13
 881 002a 07          		.1byte	0x1
 882 002a 01          		.1byte	0x13
 883 002b 01          		.1byte	0x0
 884 002b 49          		.1byte	0x0
 885 002c 13          		.1byte	0x8
 886 002c 01          		.1byte	0x21
 887 002d 13          		.1byte	0x0
 888 002d 00          		.1byte	0x49
 889 002e 00          		.1byte	0x13
 890 002e 08          		.1byte	0x2f
 891 002f 21          		.1byte	0xb
 892 002f 00          		.1byte	0x0
 893 0030 49          		.1byte	0x0
 894 0030 13          		.1byte	0x9
 895 0031 2F          		.1byte	0x24
 896 0031 0B          		.1byte	0x0
 897 0032 00          		.1byte	0xb
 898 0032 00          		.1byte	0xb
 899 0033 09          		.1byte	0x3e
 900 0033 24          		.1byte	0xb
 901 0034 00          		.1byte	0x0
 902 0034 0B          		.1byte	0x0
 903 0035 0B          		.1byte	0xa
 904 0035 3E          		.1byte	0x2e
 905 0036 0B          		.1byte	0x1
 906 0036 00          		.1byte	0x3f
 907 0037 00          		.1byte	0xc
 908 0037 0A          		.1byte	0x3
 909 0038 2E          		.1byte	0xe
 910 0038 01          		.1byte	0x3a
 911 0039 3F          		.1byte	0xb
 912 0039 0C          		.1byte	0x3b
 913 003a 03          		.1byte	0x5
 914 003a 0E          		.1byte	0x27
 915 003b 3A          		.1byte	0xc
 916 003b 0B          		.1byte	0x49
 917 003c 3B          		.1byte	0x13
 918 003c 05          		.1byte	0x11
 919 003d 27          		.1byte	0x1
 920 003d 0C          		.1byte	0x12
 921 003e 49          		.1byte	0x1
 922 003e 13          		.1byte	0x40
 923 003f 11          		.1byte	0x6
 924 003f 01          		.1byte	0x1
 925 0040 12          		.1byte	0x13
 926 0040 01          		.1byte	0x0
 927 0041 40          		.1byte	0x0
 928 0041 06          		.1byte	0xb
 929 0042 01          		.1byte	0x5
 930 0042 13          		.1byte	0x0
 931 0043 00          		.1byte	0x3
 932 0043 00          		.1byte	0x8
 933 0044 0B          		.1byte	0x3a
 934 0044 05          		.1byte	0xb
 935 0045 00          		.1byte	0x3b
 936 0045 03          		.1byte	0x5
 937 0046 08          		.1byte	0x49
 938 0046 3A          		.1byte	0x13
 939 0047 0B          		.1byte	0x2
 940 0047 3B          		.1byte	0x6
 941 0048 05          		.1byte	0x0
 942 0048 49          		.1byte	0x0
 943 0049 13          		.1byte	0xc
 944 0049 02          		.1byte	0x5
 945 004a 06          		.1byte	0x0
 946 004a 00          		.1byte	0x3
 947 004b 00          		.1byte	0xe
 948 004b 0C          		.1byte	0x3a
 949 004c 05          		.1byte	0xb
 950 004c 00          		.1byte	0x3b
 951 004d 03          		.1byte	0x5
 952 004d 0E          		.1byte	0x49
 953 004e 3A          		.1byte	0x13
 954 004e 0B          		.1byte	0x2
 955 004f 3B          		.1byte	0x6
 956 004f 05          		.1byte	0x0
 957 0050 49          		.1byte	0x0
 958 0050 13          		.1byte	0xd
 959 0051 02          		.1byte	0x5
 960 0051 06          		.1byte	0x0
 961 0052 00          		.1byte	0x3
 962 0052 00          		.1byte	0xe
 963 0053 0D          		.1byte	0x3a
 964 0053 05          		.1byte	0xb
 965 0054 00          		.1byte	0x3b
 966 0054 03          		.1byte	0x5
 967 0055 0E          		.1byte	0x49
 968 0055 3A          		.1byte	0x13
 969 0056 0B          		.1byte	0x2
 970 0056 3B          		.1byte	0xa
 971 0057 05          		.1byte	0x0
 972 0057 49          		.1byte	0x0
 973 0058 13          		.1byte	0xe
 974 0058 02          		.1byte	0x2e
 975 0059 0A          		.1byte	0x1
 976 0059 00          		.1byte	0x3f
 977 005a 00          		.1byte	0xc
 978 005a 0E          		.1byte	0x3
 979 005b 2E          		.1byte	0xe
 980 005b 01          		.1byte	0x3a
 981 005c 3F          		.1byte	0xb
 982 005c 0C          		.1byte	0x3b
 983 005d 03          		.1byte	0x5
 984 005d 0E          		.1byte	0x27
 985 005e 3A          		.1byte	0xc
 986 005e 0B          		.1byte	0x11
 987 005f 3B          		.1byte	0x1
 988 005f 05          		.1byte	0x12
 989 0060 27          		.1byte	0x1
 990 0060 0C          		.1byte	0x40
 991 0061 11          		.1byte	0x6
 992 0061 01          		.1byte	0x1
 993 0062 12          		.1byte	0x13
 994 0062 01          		.1byte	0x0
 995 0063 40          		.1byte	0x0
 996 0063 06          		.1byte	0xf
 997 0064 01          		.1byte	0x34
 998 0064 13          		.1byte	0x0
 999 0065 00          		.1byte	0x3
 1000 0065 00          		.1byte	0xe
 1001 0066 0F          		.1byte	0x3a
 1002 0066 34          		.1byte	0xb
 1003 0067 00          		.1byte	0x3b
 1004 0067 03          		.1byte	0x5
 1005 0068 0E          		.1byte	0x49
 1006 0068 3A          		.1byte	0x13
 1007 0069 0B          		.1byte	0x0
 1008 0069 3B          		.1byte	0x0
 1009 006a 05          		.1byte	0x10
 1010 006a 49          		.1byte	0x2e
 1011 006b 13          		.1byte	0x1
 1012 006b 00          		.1byte	0x3f
 1013 006c 00          		.1byte	0xc
 1014 006c 10          		.1byte	0x3
 1015 006d 2E          		.1byte	0xe
 1016 006d 01          		.1byte	0x3a
 1017 006e 3F          		.1byte	0xb
 1018 006e 0C          		.1byte	0x3b
 1019 006f 03          		.1byte	0x5
 1020 006f 0E          		.1byte	0x27
 1021 0070 3A          		.1byte	0xc
 1022 0070 0B          		.1byte	0x11
 1023 0071 3B          		.1byte	0x1
 1024 0071 05          		.1byte	0x12
 1025 0072 27          		.1byte	0x1
 1026 0072 0C          		.1byte	0x40
 1027 0073 11          		.1byte	0xa
 1028 0073 01          		.1byte	0x1
 1029 0074 12          		.1byte	0x13
 1030 0074 01          		.1byte	0x0
 1031 0075 40          		.1byte	0x0
 1032 0075 0A          		.1byte	0x11
 1033 0076 01          		.1byte	0x2e
 1034 0076 13          		.1byte	0x0
 1035 0077 00          		.1byte	0x3f
 1036 0077 00          		.1byte	0xc
 1037 0078 11          		.1byte	0x3
 1038 0078 2E          		.1byte	0xe
 1039 0079 00          		.1byte	0x3a
 1040 0079 3F          		.1byte	0xb
 1041 007a 0C          		.1byte	0x3b
 1042 007a 03          		.1byte	0xb
 1043 007b 0E          		.1byte	0x27
 1044 007b 3A          		.1byte	0xc
 1045 007c 0B          		.1byte	0x11
 1046 007c 3B          		.1byte	0x1
 1047 007d 0B          		.1byte	0x12
 1048 007d 27          		.1byte	0x1
 1049 007e 0C          		.1byte	0x40
 1050 007e 11          		.1byte	0xa
 1051 007f 01          		.1byte	0x0
 1052 007f 12          		.1byte	0x0
 1053 0080 01          		.1byte	0x12
 1054 0080 40          		.1byte	0x2e
 1055 0081 0A          		.1byte	0x1
 1056 0081 00          		.1byte	0x3f
 1057 0082 00          		.1byte	0xc
 1058 0082 12          		.1byte	0x3
 1059 0083 2E          		.1byte	0xe
 1060 0083 01          		.1byte	0x3a
 1061 0084 3F          		.1byte	0xb
 1062 0084 0C          		.1byte	0x3b
 1063 0085 03          		.1byte	0xb
 1064 0085 0E          		.1byte	0x27
 1065 0086 3A          		.1byte	0xc
 1066 0086 0B          		.1byte	0x11
 1067 0087 3B          		.1byte	0x1
 1068 0087 0B          		.1byte	0x12
 1069 0088 27          		.1byte	0x1
 1070 0088 0C          		.1byte	0x40
 1071 0089 11          		.1byte	0x6
 1072 0089 01          		.1byte	0x1
 1073 008a 12          		.1byte	0x13
 1074 008a 01          		.1byte	0x0
 1075 008b 40          		.1byte	0x0
 1076 008b 06          		.1byte	0x13
 1077 008c 01          		.1byte	0x5
 1078 008c 13          		.1byte	0x0
 1079 008d 00          		.1byte	0x3
 1080 008d 00          		.1byte	0xe
 1081 008e 13          		.1byte	0x3a
 1082 008e 05          		.1byte	0xb
 1083 008f 00          		.1byte	0x3b
 1084 008f 03          		.1byte	0xb
 1085 0090 0E          		.1byte	0x49
 1086 0090 3A          		.1byte	0x13
 1087 0091 0B          		.1byte	0x2
 1088 0091 3B          		.1byte	0x6
 1089 0092 0B          		.1byte	0x0
 1090 0092 49          		.1byte	0x0
 1091 0093 13          		.1byte	0x14
 1092 0093 02          		.1byte	0x34
 1093 0094 06          		.1byte	0x0
 1094 0094 00          		.1byte	0x3
 1095 0095 00          		.1byte	0xe
 1096 0095 14          		.1byte	0x3a
 1097 0096 34          		.1byte	0xb
 1098 0096 00          		.1byte	0x3b
 1099 0097 03          		.1byte	0xb
 1100 0097 0E          		.1byte	0x49
 1101 0098 3A          		.1byte	0x13
 1102 0098 0B          		.1byte	0x0
 1103 0099 3B          		.1byte	0x0
 1104 0099 0B          		.1byte	0x15
 1105 009a 49          		.1byte	0x34
 1106 009a 13          		.1byte	0x0
 1107 009b 00          		.1byte	0x3
 1108 009b 00          		.1byte	0xe
 1109 009c 15          		.1byte	0x3a
 1110 009c 34          		.1byte	0xb
 1111 009d 00          		.1byte	0x3b
 1112 009d 03          		.1byte	0xb
 1113 009e 0E          		.1byte	0x49
 1114 009e 3A          		.1byte	0x13
 1115 009f 0B          		.1byte	0x2
 1116 009f 3B          		.1byte	0xa
 1117 00a0 0B          		.1byte	0x0
 1118 00a0 49          		.1byte	0x0
 1119 00a1 13          		.1byte	0x16
 1120 00a1 02          		.1byte	0xf
 1121 00a2 0A          		.1byte	0x0
 1122 00a2 00          		.1byte	0xb
 1123 00a3 00          		.1byte	0xb
 1124 00a3 16          		.1byte	0x49
 1125 00a4 0F          		.1byte	0x13
 1126 00a4 00          		.1byte	0x0
 1127 00a5 0B          		.1byte	0x0
 1128 00a5 0B          		.1byte	0x17
 1129 00a6 49          		.1byte	0x34
 1130 00a6 13          		.1byte	0x0
 1131 00a7 00          		.1byte	0x3
 1132 00a7 00          		.1byte	0xe
 1133 00a8 17          		.1byte	0x3a
 1134 00a8 34          		.1byte	0xb
 1135 00a9 00          		.1byte	0x3b
 1136 00a9 03          		.1byte	0xb
 1137 00aa 0E          		.1byte	0x49
 1138 00aa 3A          		.1byte	0x13
 1139 00ab 0B          		.1byte	0x3f
 1140 00ab 3B          		.1byte	0xc
 1141 00ac 0B          		.1byte	0x2
 1142 00ac 49          		.1byte	0xa
 1143 00ad 13          		.1byte	0x0
 1144 00ad 3F          		.1byte	0x0
 1145 00ae 0C          		.1byte	0x18
 1146 00ae 02          		.1byte	0x34
 1147 00af 0A          		.1byte	0x0
 1148 00af 00          		.1byte	0x3
 1149 00b0 00          		.1byte	0xe
 1150 00b0 18          		.1byte	0x3a
 1151 00b1 34          		.1byte	0xb
 1152 00b1 00          		.1byte	0x3b
 1153 00b2 03          		.1byte	0xb
 1154 00b2 0E          		.1byte	0x49
 1155 00b3 3A          		.1byte	0x13
 1156 00b3 0B          		.1byte	0x3f
 1157 00b4 3B          		.1byte	0xc
 1158 00b4 0B          		.1byte	0x3c
 1159 00b5 49          		.1byte	0xc
 1160 00b5 13          		.1byte	0x0
 1161 00b6 3F          		.1byte	0x0
 1162 00b6 0C          		.1byte	0x0
 1163 00b7 3C          		.section	.debug_pubnames,"",@progbits
 1164 00b7 0C          		.4byte	0xef
 1165 00b8 00          		.2byte	0x2
 1166 00b8 00          		.4byte	.Ldebug_info0
 1167 00b9 00          		.4byte	0x323
 1168                 		.4byte	0x112
 1169 0000 00 00 00 EF 		.ascii "LightHardwareSetBlink\000"
 1170 0002 00 02       		.4byte	0x17e
 1171 0003 00 00 00 00 		.ascii "LightHardwareSetLevel\000"
 1172 0005 00 00 03 23 		.4byte	0x1e3
 1173 0007 00 00 01 12 		.ascii "LightHardwareSetColor\000"
 1174 0009 4C 69 67 68 		.4byte	0x23d
 1174      74 48 61 72 
 1174      64 77 61 72 
 1174      65 53 65 74 
 1174      42 6C 69 6E 
 1175 0014 00 00 01 7E 		.ascii "LightHardwarePowerControl\000"
 1176 0016 4C 69 67 68 		.4byte	0x266
 1176      74 48 61 72 
 1176      64 77 61 72 
 1176      65 53 65 74 
 1176      4C 65 76 65 
 1177 0021 00 00 01 E3 		.ascii "LightHardwareInit\000"
 1178 0023 4C 69 67 68 		.4byte	0x279
 1178      74 48 61 72 
 1178      64 77 61 72 
 1178      65 53 65 74 
 1178      43 6F 6C 6F 
 1179 002e 00 00 02 3D 		.ascii "HandlePIOChangedEvent\000"
 1180 0030 4C 69 67 68 		.4byte	0x2df
 1180      74 48 61 72 
 1180      64 77 61 72 
 1180      65 50 6F 77 
 1180      65 72 43 6F 
 1181 003d 00 00 02 66 		.ascii "lot_model_groups\000"
 1182 003f 4C 69 67 68 		.4byte	0x2f1
 1182      74 48 61 72 
 1182      64 77 61 72 
 1182      65 49 6E 69 
 1182      74 00 
 1183 0048 00 00 02 79 		.ascii "extension_model_groups\000"
 1184 004a 48 61 6E 64 		.4byte	0x303
 1184      6C 65 50 49 
 1184      4F 43 68 61 
 1184      6E 67 65 64 
 1184      45 76 65 6E 
 1185 0055 00 00 02 DF 		.ascii "grp_model_groups\000"
 1186 0057 6C 6F 74 5F 		.4byte	0x0
 1186      6D 6F 64 65 
 1186      6C 5F 67 72 
 1186      6F 75 70 73 
 1186      00 
 1187 005f 00 00 02 F1 		.section	.debug_aranges,"",@progbits
 1188 0061 65 78 74 65 		.4byte	0x44
 1188      6E 73 69 6F 
 1188      6E 5F 6D 6F 
 1188      64 65 6C 5F 
 1188      67 72 6F 75 
 1189 006d 00 00 03 03 		.2byte	0x2
 1190 006f 67 72 70 5F 		.4byte	.Ldebug_info0
 1190      6D 6F 64 65 
 1190      6C 5F 67 72 
 1190      6F 75 70 73 
 1190      00 
 1191 0077 00 00 00 00 		.1byte	0x4
 1192                 		.1byte	0x0
 1193 0000 00 00 00 44 		.2byte	0x0
 1194 0002 00 02       		.2byte	0x0
 1195 0003 00 00 00 00 		.4byte	.LFB7
 1196 0005 04          		.4byte	.LFE7-.LFB7
 1197 0005 00          		.4byte	.LFB6
 1198 0006 00 00       		.4byte	.LFE6-.LFB6
 1199 0007 00 00       		.4byte	.LFB5
 1200 0008 00 00 00 00 		.4byte	.LFE5-.LFB5
 1201 000a 00 00 00 00 		.4byte	.LFB4
 1202 000c 00 00 00 00 		.4byte	.LFE4-.LFB4
 1203 000e 00 00 00 00 		.4byte	.LFB3
 1204 0010 00 00 00 00 		.4byte	.LFE3-.LFB3
 1205 0012 00 00 00 00 		.4byte	.LFB2
 1206 0014 00 00 00 00 		.4byte	.LFE2-.LFB2
 1207 0016 00 00 00 00 		.4byte	0x0
 1208 0018 00 00 00 00 		.4byte	0x0
 1209 001a 00 00 00 00 		.section	.debug_ranges,"",@progbits
 1210 001c 00 00 00 00 	.Ldebug_ranges0:
 1211 001e 00 00 00 00 		.4byte	.Ltext0
 1212 0020 00 00 00 00 		.4byte	.Letext0
 1213 0022 00 00 00 00 		.4byte	.LFB7
 1214                 		.4byte	.LFE7
 1215                 		.4byte	.LFB6
 1216 0000 00 00 00 00 		.4byte	.LFE6
 1217 0002 00 00 00 00 		.4byte	.LFB5
 1218 0004 00 00 00 00 		.4byte	.LFE5
 1219 0006 00 00 00 00 		.4byte	.LFB4
 1220 0008 00 00 00 00 		.4byte	.LFE4
 1221 000a 00 00 00 00 		.4byte	.LFB3
 1222 000c 00 00 00 00 		.4byte	.LFE3
 1223 000e 00 00 00 00 		.4byte	.LFB2
 1224 0010 00 00 00 00 		.4byte	.LFE2
 1225 0012 00 00 00 00 		.4byte	0x0
 1226 0014 00 00 00 00 		.4byte	0x0
 1227 0016 00 00 00 00 		.section	.debug_str,"MS",@progbits,1
 1228 0018 00 00 00 00 	.LASF5:
 1229 001a 00 00 00 00 		.ascii "long long int\000"
 1230 001c 00 00 00 00 	.LASF32:
 1231 001e 00 00 00 00 		.ascii "HandlePIOChangedEvent\000"
 1232                 	.LASF42:
 1233                 		.ascii "app_hw.c\000"
 1234 0000 6C 6F 6E 67 	.LASF36:
 1234      20 6C 6F 6E 
 1234      67 20 69 6E 
 1234      74 00 
 1235                 		.ascii "sw1_index\000"
 1236 0007 48 61 6E 64 	.LASF12:
 1236      6C 65 50 49 
 1236      4F 43 68 61 
 1236      6E 67 65 64 
 1236      45 76 65 6E 
 1237                 		.ascii "bool\000"
 1238 0012 61 70 70 5F 	.LASF41:
 1238      68 77 2E 63 
 1238      00 
 1239                 		.ascii "GNU C 4.3.4 CSR version 31 for xap [2855778]\000"
 1240 0016 73 77 31 5F 	.LASF37:
 1240      69 6E 64 65 
 1240      78 00 
 1241                 		.ascii "lot_model_groups\000"
 1242 001b 62 6F 6F 6C 	.LASF28:
 1242      00 
 1243                 		.ascii "status\000"
 1244 001e 47 4E 55 20 	.LASF21:
 1244      43 20 34 2E 
 1244      33 2E 34 20 
 1244      43 53 52 20 
 1244      76 65 72 73 
 1245                 		.ascii "blue\000"
 1246 0034 6C 6F 74 5F 	.LASF22:
 1246      6D 6F 64 65 
 1246      6C 5F 67 72 
 1246      6F 75 70 73 
 1246      00 
 1247                 		.ascii "on_time\000"
 1248 003d 73 74 61 74 	.LASF33:
 1248      75 73 00 
 1249                 		.ascii "data\000"
 1250 0040 62 6C 75 65 	.LASF35:
 1250      00 
 1251                 		.ascii "sw1_mask\000"
 1252 0043 6F 6E 5F 74 	.LASF38:
 1252      69 6D 65 00 
 1253                 		.ascii "extension_model_groups\000"
 1254 0047 64 61 74 61 	.LASF14:
 1254      00 
 1255                 		.ascii "timer_id\000"
 1256 0049 73 77 31 5F 	.LASF7:
 1256      6D 61 73 6B 
 1256      00 
 1257                 		.ascii "unsigned char\000"
 1258 004e 65 78 74 65 	.LASF34:
 1258      6E 73 69 6F 
 1258      6E 5F 6D 6F 
 1258      64 65 6C 5F 
 1258      67 72 6F 75 
 1259                 		.ascii "event_data\000"
 1260 0059 74 69 6D 65 	.LASF4:
 1260      72 5F 69 64 
 1260      00 
 1261                 		.ascii "long unsigned int\000"
 1262 005e 75 6E 73 69 	.LASF27:
 1262      67 6E 65 64 
 1262      20 63 68 61 
 1262      72 00 
 1263                 		.ascii "temp\000"
 1264 0065 65 76 65 6E 	.LASF8:
 1264      74 5F 64 61 
 1264      74 61 00 
 1265                 		.ascii "uint8\000"
 1266 006a 6C 6F 6E 67 	.LASF16:
 1266      20 75 6E 73 
 1266      69 67 6E 65 
 1266      64 20 69 6E 
 1266      74 00 
 1267                 		.ascii "pio_state\000"
 1268 0073 74 65 6D 70 	.LASF9:
 1268      00 
 1269                 		.ascii "uint16\000"
 1270 0076 75 69 6E 74 	.LASF10:
 1270      38 00 
 1271                 		.ascii "uint32\000"
 1272 0079 70 69 6F 5F 	.LASF23:
 1272      73 74 61 74 
 1272      65 00 
 1273                 		.ascii "off_time\000"
 1274 007e 75 69 6E 74 	.LASF0:
 1274      31 36 00 
 1275                 		.ascii "unsigned int\000"
 1276 0081 75 69 6E 74 	.LASF44:
 1276      33 32 00 
 1277                 		.ascii "LightHardwareInit\000"
 1278 0085 6F 66 66 5F 	.LASF19:
 1278      74 69 6D 65 
 1278      00 
 1279                 		.ascii "char\000"
 1280 0089 75 6E 73 69 	.LASF13:
 1280      67 6E 65 64 
 1280      20 69 6E 74 
 1280      00 
 1281                 		.ascii "pio_mask_t\000"
 1282 0090 4C 69 67 68 	.LASF18:
 1282      74 48 61 72 
 1282      64 77 61 72 
 1282      65 49 6E 69 
 1282      74 00 
 1283                 		.ascii "pio_changed_data\000"
 1284 0099 63 68 61 72 	.LASF40:
 1284      00 
 1285                 		.ascii "tId_UART_TX_ACK\000"
 1286 009b 70 69 6F 5F 	.LASF24:
 1286      6D 61 73 6B 
 1286      5F 74 00 
 1287                 		.ascii "level\000"
 1288 00a1 70 69 6F 5F 	.LASF15:
 1288      63 68 61 6E 
 1288      67 65 64 5F 
 1288      64 61 74 61 
 1288      00 
 1289                 		.ascii "mask\000"
 1290 00a9 74 49 64 5F 	.LASF20:
 1290      55 41 52 54 
 1290      5F 54 58 5F 
 1290      41 43 4B 00 
 1291                 		.ascii "green\000"
 1292 00b1 6C 65 76 65 	.LASF1:
 1292      6C 00 
 1293                 		.ascii "short int\000"
 1294 00b4 6D 61 73 6B 	.LASF29:
 1294      00 
 1295                 		.ascii "LightHardwareSetLevel\000"
 1296 00b7 67 72 65 65 	.LASF25:
 1296      6E 00 
 1297                 		.ascii "LightHardwareSetBlink\000"
 1298 00ba 73 68 6F 72 	.LASF17:
 1298      74 20 69 6E 
 1298      74 00 
 1299                 		.ascii "pio_cause\000"
 1300 00bf 4C 69 67 68 	.LASF39:
 1300      74 48 61 72 
 1300      64 77 61 72 
 1300      65 53 65 74 
 1300      4C 65 76 65 
 1301                 		.ascii "grp_model_groups\000"
 1302 00ca 4C 69 67 68 	.LASF26:
 1302      74 48 61 72 
 1302      64 77 61 72 
 1302      65 53 65 74 
 1302      42 6C 69 6E 
 1303                 		.ascii "LightHardwareSetColor\000"
 1304 00d5 70 69 6F 5F 	.LASF3:
 1304      63 61 75 73 
 1304      65 00 
 1305                 		.ascii "long int\000"
 1306 00da 67 72 70 5F 	.LASF43:
 1306      6D 6F 64 65 
 1306      6C 5F 67 72 
 1306      6F 75 70 73 
 1306      00 
 1307                 		.ascii "C:\\Users\\Admin\\Downloads\\UNIS\\1024_Uart_rev0.3\\application\\csr_mesh_light\000"
 1308 00e2 4C 69 67 68 	.LASF30:
 1308      74 48 61 72 
 1308      64 77 61 72 
 1308      65 53 65 74 
 1308      43 6F 6C 6F 
 1309                 		.ascii "LightHardwarePowerControl\000"
 1310 00ed 6C 6F 6E 67 	.LASF11:
 1310      20 69 6E 74 
 1310      00 
 1311                 		.ascii "signed char\000"
 1312 00f2 43 3A 5C 55 	.LASF2:
 1312      73 65 72 73 
 1312      5C 41 64 6D 
 1312      69 6E 5C 44 
 1312      6F 77 6E 6C 
 1313                 		.ascii "short unsigned int\000"
 1314 0117 4C 69 67 68 	.LASF31:
 1314      74 48 61 72 
 1314      64 77 61 72 
 1314      65 50 6F 77 
 1314      65 72 43 6F 
 1315                 		.ascii "power_on\000"
 1316 0124 73 69 67 6E 	.LASF6:
 1316      65 64 20 63 
 1316      68 61 72 00 
 1317                 		.ascii "long long unsigned int\000"
 1318 012a 73 68 6F 72 		.ident	"GCC: (GNU) 4.3.4 CSR version 31 for xap [2855778]"
 1318      74 20 75 6E 
 1318      73 69 67 6E 
 1318      65 64 20 69 
 1318      6E 74 00 
 1319                 	...
